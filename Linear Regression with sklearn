# Import the necessary libraries
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Prepare the data
# Assuming you have a dataset with features X and labels y
X = [[1], [2], [3], [4], [5],[12], [24], [48], [60], [75]]  # Input features
y = [2, 4, 6, 8, 10,24, 48, 96, 120, 150]           # Corresponding labels

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Create an instance of the model (Linear Regression in this case)
model = LinearRegression()
# Train the model using the training data
model.fit(X_train, y_train)
# Make predictions on the testing data
y_pred = model.predict(X_test)
# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)
# Use the trained model to make predictions on new data
new_data = [[6], [7], [8]]
new_predictions = model.predict(new_data)
print("Predictions for new data:", new_predictions)
